---
// cardTemplate.astro
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets'

interface Props {
    title?: string;
    price?: string;
    state?: string;
    seller?: string;
    imagePath?: string;
    imageUrl?: string;
}

const { 
    title = "Tytuł", 
    price = "Cena", 
    state = "Stan", 
    seller = "Imię Nazwisko", 
    imagePath = "book-of-black-cover-closed-svgrepo-com.svg",
    imageUrl
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}', { eager: true });

// Only check for local image if no URL is provided
const useLocalImage = !imageUrl;
if (useLocalImage && !images[imagePath]) {
    throw new Error(`"${imagePath}" does not exist"`);
}

function truncateTitle(
    title: string, 
    wordLimit: number, 
    charLimit: number, 
    fallbackWordLimit?: number,
    fallbackCharLimit?: number
): string {
    // Initial truncation
    const words = title.split(' ');
    let truncated = words.slice(0, wordLimit).join(' ');

    // Initial character limit truncation
    if (truncated.length > charLimit) {
        const truncatedWords = truncated.split(' ');
        while (truncated.length > charLimit && truncatedWords.length > 1) {
            truncatedWords.pop(); // Remove the last word
            truncated = truncatedWords.join(' ');
        }
        truncated += '...'; // Add ellipsis if truncation occurred
    }

    return truncated;
}

// Initial limits
const maxWords = 10;
const maxCharacters = 30;


// Use the function with both sets of limits
const shortTitle = truncateTitle(
    title, 
    maxWords, 
    maxCharacters, 
);
---
<style>
    .aspect-responsive {
        @apply aspect-[7/12];
    }
    @media (max-height: 800px) {
        .aspect-responsive {
            aspect-ratio: 25 / 36;
        }
        .title-responsive {
            @apply !text-xs;
        }
        .price-responsive {
            @apply !text-xs;
        }
    }
</style>
<div class="w-full max-w-18 bg-white rounded-xl transition-shadow 
            aspect-responsive">
    <!-- Image Container -->
    <div class="relative w-full 
                h-2/3">
        <!-- Main Image Area -->
        <div class="w-full h-full rounded-t-xl overflow-hidden">
            <!-- Book cover/content area -->
            <div class="w-full h-full relative">
                {useLocalImage ? (
                    <Image 
                        src={images[imagePath].default}
                        alt={title}
                        class="w-full h-full object-cover"
                        draggable="false"
                    />
                ) : (
                    <img 
                        src={imageUrl}
                        alt={title}
                        class="w-full h-full object-cover"
                        draggable="false"
                    />
                )}
            </div>
        </div>
        <!-- Camera Icon Button -->
        <button class="absolute top-3 right-3 bg-black/40 hover:bg-black/60 rounded-full p-2.5 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
        </button>
    </div>

    <!-- Product Details -->
    <div class="p-4 flex justify-between flex-col h-1/3">
        <!-- Top info -->
        <div>
            <h2 class="text-base max-[370px]:text-sm md:text-lg lg:text-xl font-medium mb-1 title-responsive">{shortTitle}</h2>
            <p class="text-gray-600 max-[370px]:text-sm text-sm mb-2 hidden min-[420px]:block">{state}</p>
            <p class="text-lg md:text-xl max-[370px]:text-base lg:text-2xl font-bold mb-3 price-responsive">{price}</p>
        </div>
        <!-- Bottom Row -->
        <div class="flex items-center justify-between">
            <!-- User Info -->
            <div class="flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                <span class="text-xs md:text-sm text-gray-600">{seller}</span>
            </div>
            <!-- Heart Icon -->
            <button class="p-1 hover:scale-110 transition-transform">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 md:h-6 md:w-6 text-gray-400 hover:text-gray-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
            </button>
        </div>
    </div>
</div>