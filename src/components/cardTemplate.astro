---
// cardTemplate.astro
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets'

interface Props {
    title?: string;
    price?: string;
    state?: string;
    seller?: string;
    imagePath?: string;
    imageUrl?: string;
}

const { 
    title = "Tytuł", 
    price = "Cena", 
    state = "Stan", 
    seller = "Imię Nazwisko", 
    imagePath = "/src/assets/placeholder.jpg",
    imageUrl
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}', { eager: true });

// Only check for local image if no URL is provided
const useLocalImage = !imageUrl;
if (useLocalImage && !images[imagePath]) {
    throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
}

const maxWords = 10;
const maxCharacters = 30;

function truncateTitle(title: string, wordLimit: number, charLimit: number): string {
    const words = title.split(' ');

    // Truncate to word limit
    let truncated = words.slice(0, wordLimit).join(' ');

    // Further truncate to character limit if necessary
    if (truncated.length > charLimit) {
        const truncatedWords = truncated.split(' ');
        while (truncated.length > charLimit && truncatedWords.length > 1) {
            truncatedWords.pop(); // Remove the last word
            truncated = truncatedWords.join(' ');
        }
        truncated += '...'; // Add ellipsis if truncation occurred
    }

    return truncated;
}

const shortTitle = truncateTitle(title, maxWords, maxCharacters);
---

<style>

@media (max-height: 720px) {
  .aspect-responsive {
    aspect-ratio: 1; /* Avoid unnecessary !important */
  }
  .image-height-responsive {
    height: calc(100% - 80px); /* Avoid unnecessary !important */
  }
  .width-responsive {
    max-width: 280px;
  }
  .hidden-responsive {
    display: none;
  }
  .description-responsive {
    max-height: 200px;
    min-height: 150px;
  }
  .text-responsive {
    @apply text-base;
  }
}

@media (min-height: 721px) and (max-height: 900px) {
  .aspect-responsive {
    aspect-ratio: 2 / 3;
  }
}

</style>
<div class="w-full max-w-[280px] bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow h-auto aspect-[1/2] aspect-responsive">
    <!-- Image Container -->
    <div class="relative w-full h-[calc(100%-164px)] image-height-responsive">
        <!-- Main Image Area -->
        <div class="w-full h-full rounded-t-xl overflow-hidden">
            <!-- Book cover/content area -->
            <div class="w-full h-full relative">
                {useLocalImage ? (
                    <Image 
                        src={images[imagePath].default}
                        alt={title}
                        class="w-full h-full object-cover"
                        draggable="false"
                    />
                ) : (
                    <img 
                        src={imageUrl}
                        alt={title}
                        class="w-full h-full object-cover"
                        draggable="false"
                    />
                )}
            </div>
        </div>
        <!-- Camera Icon Button -->
        <button class="absolute top-3 right-3 bg-black/40 hover:bg-black/60 rounded-full p-2.5 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
        </button>
    </div>

    <!-- Product Details -->
    <div class="p-4 min-h-[200px] description-responsive flex justify-between flex-col">
        <!-- Top info -->
        <div>
            <h2 class="text-xl text-responsive font-medium mb-1">{shortTitle}</h2>
            <p class="text-gray-600 text-sm mb-2 hidden-responsive">{state}</p>
            <p class="text-xl font-bold mb-3">{price}</p>
        </div>
        <!-- Bottom Row -->
        <div class="flex items-center justify-between">
            <!-- User Info -->
            <div class="flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                <span class="text-gray-600 text-sm">{seller}</span>
            </div>
            <!-- Heart Icon -->
            <button class="p-1 hover:scale-110 transition-transform">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-400 hover:text-gray-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
            </button>
        </div>
    </div>
</div>